#!/usr/bin/env python
from tornado import websocket, web, ioloop
from json import loads as l,dumps as d

cl = []
req = dict()

class SocketHandler(websocket.WebSocketHandler):
  def open(self):
    print 'connection:',self
    if self not in cl:
      cl.append(self)

  def on_message(self, message):
    res=l(message)
    conn=req[res['r']]
    conn.write(message)
    conn.finish()
    del req[res['r']]

  def on_close(self):
    if self in cl:
      cl.remove(self)

class ApiHandler(web.RequestHandler):
  @web.asynchronous
  def get(self, *args):
    req[id(self)]=self
    cmd = self.get_argument("cmd")
    data = {"cmd":cmd,"r":id(self)}
    if cmd == 'at':
      data['w']=int(self.get_argument('w'))
    elif cmd in 'dfm':
      for a in 'wt':
        data[a]=int(self.get_argument(a))
    elif cmd == 'n':
      data['u']=self.get_argument('u')
    elif cmd in ['o','lw']:
      data['q']=self.get_argument('q')
    data = d(data)
    for c in cl:
      c.write_message(data)

  @web.asynchronous
  def post(self):
    pass

app = web.Application([
  (r'/proxy', SocketHandler),
  (r'/api', ApiHandler),
])

if __name__ == '__main__':
  app.listen(3141,address='127.0.0.1')
  ioloop.IOLoop.instance().start()
